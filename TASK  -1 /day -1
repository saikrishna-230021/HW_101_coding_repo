
//getting started
module top_module( output one );

    assign one =1;

endmodule

//output zero

module top_module(
    output zero
);// Module body starts after semicolon
assign zero=0;
endmodule


//simple wires

module top_module( input in, output out );
 assign out = in;
endmodule


// four wires

module top_module( 
    input a,b,c,
    output w,x,y,z );
    assign w=a;
    assign x=b;
    assign y=b;
    assign z=c;
endmodule

//inverter

module top_module( input in, output out );
assign out=~in;
endmodule

//AND GATE

module top_module( 
    input a, 
    input b, 
    output out );
assign out=a&b;
endmodule

//NOR gate

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = ~(a||b);
endmodule

//XNOR gate

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = ~(a^b);
endmodule

//declaring wires

module top_module(
    input a,
    input b,
    input c,
    input d,
    output out,
    output out_n   );
    wire a1,a2,o3;
    assign a1=a&b;
    assign a2=c&d;
    assign o3=a1|a2;
    assign out=o3;
    assign out_n=~o3;

endmodule

//7438 chip

module top_module ( 
    input p1a, p1b, p1c, p1d, p1e, p1f,
    output p1y,
    input p2a, p2b, p2c, p2d,
    output p2y );
     wire i1,i2,i3,i4,i5,i6;
    assign i1=p2a & p2b;
    assign i2=p2c & p2d;
    assign i3=p1a & p1b & p1c;
    assign i4=p1f & p1e & p1d;
    assign i5=i1 | i2;
    assign i6=i3 | i4;
    assign p2y=i5;
    assign p1y=i6;
    

endmodule
